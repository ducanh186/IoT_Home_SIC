{
    "name": "ESP32 Servo Control System",
    "version": "1.0.0",
    "description": "Complete IoT system for controlling servo motor via MQTT with web dashboard",
    "author": "IoT Home SIC",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/ducanh186/IoT_Home_SIC"
    },
    "keywords": [
        "esp32",
        "servo",
        "mqtt",
        "iot",
        "nodejs",
        "nodered",
        "dashboard",
        "raspberry-pi"
    ],
    "dependencies": {
        "node-red": "^3.0.0",
        "node-red-dashboard": "^3.1.0",
        "node-red-contrib-ui-led": "^0.4.11",
        "node-red-node-serialport": "^2.0.0"
    },
    "python_dependencies": [
        "paho-mqtt>=1.6.0",
        "requests>=2.28.0"
    ],
    "arduino_libraries": [
        "WiFi",
        "PubSubClient",
        "ESP32Servo",
        "ArduinoJson"
    ],
    "system_requirements": {
        "raspberry_pi": "4B or 5 (recommended)",
        "os": "Raspberry Pi OS (64-bit)",
        "memory": "2GB minimum, 4GB recommended",
        "storage": "16GB minimum",
        "esp32": "ESP32-WROOM-32 or ESP32-DevKitC"
    },
    "services": {
        "mosquitto": {
            "description": "MQTT Broker",
            "port": 1883,
            "websocket_port": 9001,
            "config": "/etc/mosquitto/mosquitto.conf"
        },
        "nodered": {
            "description": "Dashboard and Flow Engine",
            "port": 1880,
            "ui_path": "/ui",
            "admin_path": "/admin"
        },
        "nginx": {
            "description": "Reverse Proxy and HTTPS",
            "http_port": 80,
            "https_port": 443,
            "config": "/etc/nginx/sites-available/servo-control"
        }
    },
    "mqtt_topics": {
        "servo_command": "home/servo/cmd",
        "servo_status": "home/servo/status"
    },
    "hardware": {
        "servo": {
            "model": "SG90",
            "pin": 18,
            "voltage": "5V",
            "angle_range": "0-180 degrees"
        },
        "esp32": {
            "board": "ESP32-WROOM-32",
            "pins_used": [18],
            "power": "USB or external 5V"
        }
    },
    "features": [
        "Web-based servo control dashboard",
        "Real-time angle adjustment (0-180Â°)",
        "Preset position buttons",
        "MQTT communication",
        "HTTPS security",
        "System health monitoring",
        "Connection status indicators",
        "Error notifications",
        "Smooth servo movement",
        "Heartbeat monitoring"
    ],
    "installation": {
        "steps": [
            "Run setup_pi_services.sh",
            "Run setup_nodered_flow.py",
            "Configure ESP32 WiFi settings",
            "Upload ESP32 code",
            "Connect servo to ESP32",
            "Access dashboard via HTTPS"
        ],
        "estimated_time": "30-45 minutes"
    },
    "troubleshooting": {
        "common_issues": [
            {
                "issue": "ESP32 not connecting to MQTT",
                "solutions": [
                    "Check WiFi credentials",
                    "Verify Raspberry Pi IP address",
                    "Check MQTT username/password",
                    "Verify firewall settings"
                ]
            },
            {
                "issue": "Dashboard not accessible",
                "solutions": [
                    "Check Node-RED service status",
                    "Verify Nginx configuration",
                    "Check SSL certificate",
                    "Verify port accessibility"
                ]
            },
            {
                "issue": "Servo not moving",
                "solutions": [
                    "Check hardware connections",
                    "Verify servo power supply",
                    "Check ESP32 pin configuration",
                    "Monitor MQTT message traffic"
                ]
            }
        ]
    },
    "security": {
        "features": [
            "HTTPS encryption",
            "MQTT authentication",
            "Self-signed SSL certificates",
            "Network isolation options"
        ],
        "recommendations": [
            "Change default MQTT passwords",
            "Use proper SSL certificates in production",
            "Configure firewall rules",
            "Enable access logging"
        ]
    },
    "monitoring": {
        "health_check": "python3 health_monitor.py",
        "logs": {
            "mosquitto": "sudo journalctl -u mosquitto -f",
            "nodered": "sudo journalctl -u nodered -f",
            "nginx": "sudo journalctl -u nginx -f"
        },
        "test_tools": [
            "test_mqtt_client.py",
            "health_monitor.py",
            "quick_start.py"
        ]
    }
}
